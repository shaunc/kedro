# PEP-518 https://peps.python.org/pep-0518/
[build-system]
# Minimum requirements for the build system to execute.
requires = ["setuptools>=65.5.1"] # PEP 518 specifications

[project]
authors = [
  {name = "Kedro"},
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]
description = "Kedro helps you build production-ready data and analytics pipelines"
dynamic = ["readme", "version", "dependencies", "optional-dependencies"]
keywords = [
  "pipelines",
  "machine learning",
  "data pipelines",
  "data science",
  "data engineering",
]
license = {text = "Apache Software License (Apache 2.0)"}
name = "kedro"
requires-python = ">=3.7, <3.12"

[project.urls]
Documentation = "https://docs.kedro.org"
Homepage = "https://kedro.org"
Source = "https://github.com/kedro-org/kedro"
Tracker = "https://github.com/kedro-org/kedro/issues"

[project.scripts]
kedro = "kedro.framework.cli:main"

[tool.setuptools]
zip-safe = false

[tool.setuptools.packages.find]
include = ["kedro*"]

[tool.setuptools.dynamic]
dependencies = {file = "dependency/requirements.txt"}
readme = {file = "README.md", content-type = "text/markdown"}
version = {attr = "kedro.__version__"}

[tool.black]
exclude = "/templates/|^features/steps/test_starter"

[tool.isort]
profile = "black"

[tool.pylint]
[tool.pylint.master]
extension-pkg-whitelist = "cv2"
ignore = "CVS"
ignore-patterns = "kedro/templates/*"
load-plugins = [
  "pylint.extensions.docparams",
  "pylint.extensions.no_self_use",
]
unsafe-load-any-extension = false
[tool.pylint.messages_control]
disable = [
  "ungrouped-imports",
  "duplicate-code",
]
enable = ["useless-suppression"]
[tool.pylint.refactoring]
max-nested-blocks = 5
[tool.pylint.format]
indent-after-paren = 4
indent-string = "    "
[tool.pylint.miscellaneous]
notes = [
  "FIXME",
  "XXX",
]
[tool.pylint.design]
min-public-methods = 1

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "raise NotImplementedError"]
fail_under = 100
omit = [
  "kedro/templates/*",
  "kedro/extras/logging/color_logger.py",
  "kedro/extras/extensions/ipython.py",
  "kedro/framework/cli/hooks/specs.py",
  "kedro/framework/hooks/specs.py",
  "kedro/extras/datasets/tensorflow/*",
  "kedro/extras/datasets/holoviews/*",
  "tests/*",
]
show_missing = true

[tool.pytest.ini_options]
addopts = """
--cov-config pyproject.toml \
--cov-report xml:coverage.xml \
--cov-report term-missing \
--cov kedro \
--cov tests \
--ignore tests/template/fake_repo \
--ignore features \
--ignore kedro/templates \
--no-cov-on-fail \
-ra \
-W ignore"""
testpaths = [
  "tests",
]

[tool.importlinter]
root_package = "kedro"

[[tool.importlinter.contracts]]
containers = "kedro"
ignore_imports = [
  "kedro.runner.parallel_runner -> kedro.framework.project",
  "kedro.framework.hooks.specs -> kedro.framework.context",
]
layers = [
  "framework.cli",
  "framework.session",
  "framework.context",
  "framework.project",
  "runner",
  "extras.datasets",
  "io",
  "pipeline",
  "config",
]
name = "CLI > Context > Library, Runner > Extras > IO & Pipeline"
type = "layers"

[[tool.importlinter.contracts]]
modules = [
  "kedro.pipeline",
  "kedro.io",
]
name = "Pipeline and IO are independent"
type = "independence"

[[tool.importlinter.contracts]]
forbidden_modules = [
  "kedro.runner",
  "kedro.io",
  "kedro.pipeline",
  "kedro.extras.datasets",
]
name = "Config cannot import Runner et al"
source_modules = [
  "kedro.config",
]
type = "forbidden"

[[tool.importlinter.contracts]]
forbidden_modules = [
  "kedro.config",
]
ignore_imports = [
  "kedro.framework.context.context -> kedro.config",
  "kedro.framework.session.session -> kedro.config",
]
name = "Runner et al cannot import Config"
source_modules = [
  "kedro.runner",
  "kedro.io",
  "kedro.pipeline",
  "kedro.extras.datasets",
]
type = "forbidden"
